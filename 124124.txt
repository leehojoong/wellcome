서브버전과 GIT 차이점
전부를 복사해서 로컬에서 돌리면 GIT
파일의 일부를 복사해서 수정하고 합치면 서브버전

데이터를 저장하기 전에 항상 체크섬을 구하고 그 체크섬으로 데이터 관리

디렉토리 = 파일

CLONE = 히스토리를 포함한 모든 데이터를 복사하는것

커밋은 저장시점
-------------
Tracked는 관리대상인지 아닌지
수정을 했다면 Modi 아니면 UnModi (Tracked에 포함됨)
Staged는 수정작업은했으나 저장하지 않은 상태

명령어모음
git Status : 파일상태확인. UnTraked인지 Modi인지 Stage인지
git add 파일명 : 파일 추적하기. + 파일 저장(Staged)하기
git status -s, git status -short  : 파일상태를 짤막하게 확인하기
.gitignore : 파일무시하기. git으로 관리할 필요없는 경우.(히스토리필요없는파일)
git diff : 단순히 파일이 변경됐다는 사실이 아니라 어떤 내용이 변경됐는지 볼때

2-4 되돌리기
git commit --amend

리모트저장소
인터넷이나 네트워크 어딘가에 있는 저장소. 저장소는 여러개있을 수 있으며,
어떤 저장소는 읽기만 가능하고 어떤것은 쓰기까지 가능하게 할 수 있다.
다른사람과 일한다 = 리모트 저장소를 관리하며 데이터를 push하거나 pull한다.

git remote  명령으로 현재 프로젝트에 등록된 리모트 저장소 확인가능

브랜치
코드를 여러개로 복사해야하는 일이 생길때, 코드를 통으로 복사하고
원래코드와는 상관없이 독립적으로 개발을 진행할 수 있는데
이렇게 독립적으로 개발하는것이 브랜치.

